name: "Build docker image: rebalancer-storage-controller"

on:
  push:
    branches:
      - master
    tags:
      - "*.*.*"
      - "v*.*.*"
      - "*.*.*-*"
      - "v*.*.*-*"
    paths:
      - "go.mod"
      - "go.sum"
      - "internal/**"
      - "!internal/**/*_test.go"
      - "!internal/db/**"
      - "apis/grpc/**"
      - "pkg/rebalancer/storage/controller/**"
      - "cmd/rebalancer/storage/controller/**"
      - "versions/GO_VERSION"
  pull_request:
    paths:
      - "go.mod"
      - "go.sum"
      - "internal/**"
      - "!internal/**/*_test.go"
      - "!internal/db/**"
      - "apis/grpc/**"
      - "pkg/rebalancer/storage/controller/**"
      - "cmd/rebalancer/storage/controller/**"
      - "versions/GO_VERSION"

jobs:
  build:
    strategy:
      max-parallel: 4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.PACKAGE_USER }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Build and Publish
        id: build_and_publish
        uses: ./.github/actions/docker-build
        with:
          target: rebalancer-storage-controller
          builder: ${{ steps.buildx.outputs.name }}
      - name: Initialize CodeQL
        if: startsWith( github.ref, 'refs/tags/')
        uses: github/codeql-action/init@v1
      - name: Run vulnerability scanner (table)
        if: startsWith( github.ref, 'refs/tags/')
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.build_and_publish.outputs.IMAGE_NAME }}:${{ steps.build_and_publish.outputs.PRIMARY_TAG }}"
          format: "table"
      - name: Run vulnerability scanner (sarif)
        if: startsWith( github.ref, 'refs/tags/')
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ steps.build_and_publish.outputs.IMAGE_NAME }}:${{ steps.build_and_publish.outputs.PRIMARY_TAG }}"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
      - name: Upload Trivy scan results to Security tab
        if: startsWith( github.ref, 'refs/tags/')
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: "trivy-results.sarif"
  slack:
    name: Slack notification
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: 8398a7/action-slack@v2
        with:
          author_name: rebalancer-storage-controller image build
          status: ${{ env.WORKFLOW_CONCLUSION }}
          only_mention_fail: channel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFY_WEBHOOK_URL }}
